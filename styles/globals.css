:root {
  --ratio: 1.4;
  --s0: 1em;
  --s1: calc(var(--s0) * var(--ratio));
  --s2: calc(var(--s1) * var(--ratio));
  --s3: calc(var(--s2) * var(--ratio));
  --s4: calc(var(--s3) * var(--ratio));
  --s5: calc(var(--s4) * var(--ratio));
  --s-1: calc(var(--s0) / var(--ratio));
  --s-2: calc(var(--s-1) / var(--ratio));
  --s-3: calc(var(--s-2) / var(--ratio));
  --s-4: calc(var(--s-3) / var(--ratio));
  --s-5: calc(var(--s-4) / var(--ratio));

  --spacing: var(--s0);
  --stackSpacing: var(--s0);

  --gray: #10163b;
  --light: #dcf9ff;
  --black: #0a0f2a;
  --white: white;
  --contrast: pink;



}

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

html,
body,
main,
#__next {
  width: 100%;
  height: 100%;
}

body {
  background: var(--gray);
  line-height: 1.2;
  color: var(--light);
  font-family: 'Share Tech Mono', monospace;

}

code,
pre {
  line-height: 1.0;
  font-size: inherit;
  font-family: 'Share Tech Mono', monospace;
}

.sans-serif {
  font-family: sans-serif;
  text-transform: none;
}

h4 {
  font-size: var(--s0);
}

a {
  color: inherit;
  text-decoration: underline;
}

.active a {
  color: var(--white);
  text-decoration: none;
}

a:hover,
.button:hover {
  color: var(--light);
  cursor: pointer;
}

.button {
  text-transform: uppercase;
  color: var(--white);
}

.button::before {
  content: "[";
  text-decoration: none;
  display: inline-block;
}

.button::after {
  content: "]";
  text-decoration: none;
  display: inline-block;
}


.noEvents {
  pointer-events: none;
}

.hasEvents {
  pointer-events: all;
}

.padded {
  padding: var(--spacing);
}

.padded\:s1 {
  padding: var(--s1);
}

.padded\:s2 {
  padding: var(--s2);
}

.padded\:s-1 {
  padding: var(--s-1);
}

.marginTop {
  margin-top: var(--spacing);
}

.border {
  border: 1px solid var(--light);

}

.button {
  display: inline-block;
}


.fullBleed {
  width: 100%;
  height: 100%;
  position: relative;
}

.fullBleed.absolute {
  position: absolute;
  top: calc(-1 * var(--s0));
  left: 0;
  z-index: -1;
  max-width: 100%;
  max-height: calc(100% + var(--s0));
  overflow: hidden;
}

.relative {
  position: relative;
}

.containBG {
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
}

.coverBG {
  background-color: var(--light);
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
}

.fullHeight {
  height: 100%;
}

.fullWidth {
  width: 100%;
}

.narrow p {
  width: 32ch;
  z-index: 2;
  max-width: 90vw;
}

p {
  max-width: min(42ch, 90vw);
}

.wide p {
  max-width: min(56ch, 90vw)
}


.clickHover {
  cursor: pointer;
}

.halfWidth {
  width: max(60%, calc(600px + 2* var(--spacing)));
  position: relative;
}

.whiteFill {
  background: var(--white);
}

.lightFill {
  background: var(--light);
  color: var(--black);
}

.grayFill {
  background: var(--gray);
}

.blackFill {
  background: var(--black);
}

.contrastFill {
  background: var(--contrast);
  color: var(--gray)
}


.caption {
  font-size: var(--s-1);
}

.noOverflow {
  overflow: hidden;
}

.noOverflowX {
  overflow: hidden;
}

.hide {
  display: none;
}

.center  {
  display: flex;
  justify-content: center;
  align-items: center;

}


.align-start\:vertical {
  display: flex;
  align-items: flex-start;
}

.center-text {
  text-align: center;
}

.grid {
  display: flex;
  flex-wrap: wrap;
  gap: var(--s0);
  justify-content: center;
}




.stack,
.stack\:noGap,
.stack\:s-1,
.stack\:s1,
.stack\:s2 {
  display: flex;
  flex-direction: column;
  --stackSpacing: var(--s0);
}

.stack>*+* {
  margin-top: var(--stackSpacing);
}

.stack\:noGap>*+* {
  margin-top: 0;
}

.stack\:s-1>*+* {
  margin-top: var(--s-1);
}

.stack\:s1>*+* {
  margin-top: var(--s1);
}

.stack\:s2>*+* {
  margin-top: var(--s2);
}


.stack .align-end {
  margin-top: auto;
}

.horizontal-stack .align-end {
  margin-left: auto;
}

.horizontal-stack {
  display: flex;
  flex-direction: row;
  align-items: flex-start;
  --stackSpacing: var(--s0);
}




.horizontal-stack > *:not(:first-child)::before {
  content: "âŸ¡";
  margin-right: var(--stackSpacing);
}

.horizontal-stack>*+* {
  margin-left: var(--stackSpacing);
}



.flex-1 {
  flex: 1
}



input {
  all: unset;
}

input::placeholder {
  color: inherit;
}

@media screen and (max-width: 600px) {
  ::root {
    width: calc(100% - 2 * var(--spacing));
  }

  .halfWidth {
    width: 80%;
  }

  .padded\:s1 {
    padding: var(--s0);
  }

  .stack\:s2>*+* {
    margin-top: var(--s1);
  }

  .center div.dontOverflow {
    max-height: 100%;
    border: none;
  }
  .tarotCardContainer {
    margin-top: var(--s2);
  }
}